#!/bin/bash

# Usage:
#   podvolumebackup-list <backup-name|--all> [--pod=<substring>] [namespace]
# Exempel:
#   podvolumebackup-list prod-backup
#   podvolumebackup-list prod-backup --pod=nginx
#   podvolumebackup-list --all --pod=nginx
#   podvolumebackup-list --all --pod=nginx mynamespace

# Default
NAMESPACE="velero"
POD_FILTER=""
PREFIX=""
FILTER_ALL=false

# Arguments
ARGS=()
for arg in "$@"; do
  case "$arg" in
    --pod=*)
      POD_FILTER="${arg#--pod=}"
      ;;
    --all)
      FILTER_ALL=true
      ;;
    *)
      ARGS+=("$arg")
      ;;
  esac
done

if [ "$FILTER_ALL" = false ]; then
  if [ ${#ARGS[@]} -lt 1 ]; then
    echo "Usage: $0 <backup-name|--all> [--pod=<substring>] [namespace]"
    exit 1
  fi
  PREFIX="${ARGS[0]}"
  [ ${#ARGS[@]} -gt 1 ] && NAMESPACE="${ARGS[1]}"
else
  [ ${#ARGS[@]} -gt 0 ] && NAMESPACE="${ARGS[0]}"
fi

echo "Namespace: $NAMESPACE"
if [ "$FILTER_ALL" = true ]; then
  echo "Listing all podvolumebackups"
else
  echo "Backup name: $PREFIX"
fi
[ -n "$POD_FILTER" ] && echo "Pod name contains: $POD_FILTER"
echo

# Get and filter
kubectl get podvolumebackups.velero.io \
  -n "$NAMESPACE" \
  -o json | \
jq -r \
  --arg PREFIX "$PREFIX" \
  --arg PODFILTER "$POD_FILTER" \
  --argjson ALL "$FILTER_ALL" '
  .items[]
  | select(
      ($ALL or (.metadata.name | startswith($PREFIX)))
      and
      ( ($PODFILTER == "") or (.spec.pod.name | test($PODFILTER)) )
    )
  | [
      (.spec.pod.name // "-"),
      (.spec.pod.namespace // "-"),
      (.spec.volume // "-"),
      (.status.progress.totalBytes // 0),
      (.metadata.creationTimestamp // "-")
    ]
  | @tsv' | \
sort -k1,1 | \
awk 'BEGIN {
         printf "%-40s %-20s %-15s %-10s %s\n", "Pod name", "Namespace", "Volume", "Size", "Created";
         print "-------------------------------------------------------------------------------------------------------------";
     }
     {
         size_hr = $4;
         cmd = "numfmt --to=iec-i --suffix=B --padding=7 " $4 " 2>/dev/null";
         cmd | getline size_hr;
         close(cmd);
         printf "%-40s %-20s %-15s %-10s %s\n", $1, $2, $3, size_hr, $5;
     }'
